#pragma checksum "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ec2ebfb63efaa58e1295c162c7131fcffe67b2f1"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\_ViewImports.cshtml"
using CurrencyConverter;

#line default
#line hidden
#line 2 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\_ViewImports.cshtml"
using CurrencyConverter.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ec2ebfb63efaa58e1295c162c7131fcffe67b2f1", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3cc34418be3fd801a0bcb73f723c922b7c685ef3", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<List<CurrencyConverter.Models.ModelDTO>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("container"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("margin-top:100px"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";
    Layout = null;

#line default
#line hidden
            BeginContext(113, 417, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ddb8817291834061886b9d0f1dd90fdd", async() => {
                BeginContext(119, 404, true);
                WriteLiteral(@"
    <!-- Required meta tags -->
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1, shrink-to-fit=no"">

    <!-- Bootstrap CSS -->
    <link rel=""stylesheet"" href=""https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"" integrity=""sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"" crossorigin=""anonymous"">

");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(530, 6, true);
            WriteLiteral("\r\n\r\n\r\n");
            EndContext();
            BeginContext(536, 14549, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "aca00b3d6a3f46bab9626c7b3831bc1a", async() => {
                BeginContext(585, 2, true);
                WriteLiteral("\r\n");
                EndContext();
#line 18 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
     if (Model.Count > 0)
    {

#line default
#line hidden
                BeginContext(621, 1230, true);
                WriteLiteral(@"        <div class=""row"">
            <table class=""table table-dark"">
                <thead>
                    <tr>

                        <th>Vehicle No</th>
                        <th>Container No</th>
                        <th>Detail</th>
                        <th>Weight</th>
                        <th>Bails</th>
                        <th>Location</th>
                        <th>Rate In Pak</th>
                        <th>Amount</th>
                        <th>Rate In AED</th>
                        <th>Cost In AED</th>
                        <th>Transport In Pak</th>
                        <th>Transport Rate</th>
                        <th>Transport Cost In AED</th>
                        <th>DO Charges</th>
                        <th>Munciple Charges</th>
                        <th>Clearness Charges</th>
                        <th>TAX</th>
                        <th>Tranport Charges</th>
                        <th>PUC</th>
                        <th>Tot");
                WriteLiteral("al</th>\r\n                        <th>Rate</th>\r\n                        <th>Sale</th>\r\n                        <th>Profit</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n");
                EndContext();
#line 51 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                     foreach (var rec in Model)
                    {

#line default
#line hidden
                BeginContext(1923, 64, true);
                WriteLiteral("                        <tr>\r\n\r\n                            <td>");
                EndContext();
                BeginContext(1988, 13, false);
#line 55 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.VehicleNo);

#line default
#line hidden
                EndContext();
                BeginContext(2001, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2041, 15, false);
#line 56 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.ContainerNo);

#line default
#line hidden
                EndContext();
                BeginContext(2056, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2096, 10, false);
#line 57 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.Detail);

#line default
#line hidden
                EndContext();
                BeginContext(2106, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2146, 10, false);
#line 58 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.Weight);

#line default
#line hidden
                EndContext();
                BeginContext(2156, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2196, 9, false);
#line 59 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.Bails);

#line default
#line hidden
                EndContext();
                BeginContext(2205, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2245, 12, false);
#line 60 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.Location);

#line default
#line hidden
                EndContext();
                BeginContext(2257, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2297, 13, false);
#line 61 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.RateInPak);

#line default
#line hidden
                EndContext();
                BeginContext(2310, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2350, 10, false);
#line 62 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.Amount);

#line default
#line hidden
                EndContext();
                BeginContext(2360, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2400, 13, false);
#line 63 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.RateInAED);

#line default
#line hidden
                EndContext();
                BeginContext(2413, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2453, 13, false);
#line 64 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.CostInAED);

#line default
#line hidden
                EndContext();
                BeginContext(2466, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2506, 18, false);
#line 65 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.TransportInPak);

#line default
#line hidden
                EndContext();
                BeginContext(2524, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2564, 17, false);
#line 66 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.TransportRate);

#line default
#line hidden
                EndContext();
                BeginContext(2581, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2621, 22, false);
#line 67 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.TransportCostInAED);

#line default
#line hidden
                EndContext();
                BeginContext(2643, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2683, 13, false);
#line 68 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.DoCharges);

#line default
#line hidden
                EndContext();
                BeginContext(2696, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2736, 19, false);
#line 69 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.MoncipleCharges);

#line default
#line hidden
                EndContext();
                BeginContext(2755, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2795, 20, false);
#line 70 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.ClearnessCharges);

#line default
#line hidden
                EndContext();
                BeginContext(2815, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2855, 7, false);
#line 71 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.TAX);

#line default
#line hidden
                EndContext();
                BeginContext(2862, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2902, 16, false);
#line 72 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.TotalCharges);

#line default
#line hidden
                EndContext();
                BeginContext(2918, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(2958, 8, false);
#line 73 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.Rate);

#line default
#line hidden
                EndContext();
                BeginContext(2966, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(3006, 8, false);
#line 74 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.Sale);

#line default
#line hidden
                EndContext();
                BeginContext(3014, 39, true);
                WriteLiteral("</td>\r\n                            <td>");
                EndContext();
                BeginContext(3054, 10, false);
#line 75 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                           Write(rec.Profit);

#line default
#line hidden
                EndContext();
                BeginContext(3064, 40, true);
                WriteLiteral("</td>\r\n\r\n                        </tr>\r\n");
                EndContext();
#line 78 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
                    }

#line default
#line hidden
                BeginContext(3127, 68, true);
                WriteLiteral("                </tbody>\r\n            </table>\r\n\r\n\r\n        </div>\r\n");
                EndContext();
#line 84 "C:\Projects\CurrencyConverter\CurrencyConverter\Views\Home\Index.cshtml"
    }

#line default
#line hidden
                BeginContext(3202, 11876, true);
                WriteLiteral(@"    <div class=""row"" style=""margin-top:100px"">
        <div class=""col-md-6"">



            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Vehicle No</span>
                </div>
                <input type=""text"" id=""vehicleno"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Detail</span>
                </div>
                <input type=""text"" id=""detail"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Container No</span>
                </div>
                <input type=""text"" id=""containerno"" class=""form-control"">
            </div>

            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">");
                WriteLiteral(@"
                    <span class=""input-group-text"">Bails</span>
                </div>
                <input type=""number"" id=""bails"" onchange=""GetPUC()"" class=""form-control"">
            </div>

            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Location</span>
                </div>
                <input type=""text"" id=""location"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Rate in Pakistan</span>
                </div>
                <input type=""text"" id=""rateinpak"" onchange=""calculatePrice()"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Weight</span>
                </div>
                <input type=""number"" id=");
                WriteLiteral(@"""weight"" onchange=""calculatePrice()"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Amount</span>
                </div>
                <input type=""number"" id=""amount"" readonly class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">AED Rate</span>
                </div>
                <input type=""number"" id=""aedrate"" onchange=""calculatePrice()"" class=""form-control"">
            </div>

            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Cost in AED</span>
                </div>
                <input type=""number"" id=""aedcost"" onchange=""GetTotal()"" readonly class=""form-control"">
            </div>
            <div class=""input-grou");
                WriteLiteral(@"p mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Transport in Pak</span>
                </div>
                <input type=""number"" id=""tansportinpak"" onchange=""calculateTransportCost()"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Transport Rate</span>
                </div>
                <input type=""number"" id=""transportrate"" onchange=""calculateTransportCost()"" class=""form-control"">
            </div>
        </div>

        <div class=""col-md-6"">



            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Transport Cost in AED</span>
                </div>
                <input type=""number"" readonly id=""transportcostinaed"" onchange=""GetTotal()"" class=""form-control"">
            </div>

       ");
                WriteLiteral(@"     <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">DO Charges</span>
                </div>
                <input type=""number"" id=""docharges"" onchange=""GetTotal()"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Monciple Charges</span>
                </div>
                <input type=""number"" id=""monciplecharges"" onchange=""GetTotal()"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Clearness charges</span>
                </div>
                <input type=""number"" id=""clearnesscharges"" onchange=""GetTotal()"" class=""form-control"">
            </div>

            <div class=""input-group mb-3"">
                <div class=""input-group-p");
                WriteLiteral(@"repend"">
                    <span class=""input-group-text"">TAX</span>
                </div>
                <input type=""number"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Transport Charges</span>
                </div>
                <input type=""number"" id=""transportcharges"" onchange=""GetTotal()"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Total Charges</span>
                </div>
                <input type=""number"" id=""totalcharges"" onchange=""GetPUC()"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">PUC</span>
                </div>
                <input type=""number");
                WriteLiteral(@""" id=""puc"" class=""form-control"">
            </div>

            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Rate</span>
                </div>
                <input type=""number"" id=""rate"" onchange=""GetSale()"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Sale</span>
                </div>
                <input type=""number"" readonly id=""sale"" class=""form-control"">
            </div>
            <div class=""input-group mb-3"">
                <div class=""input-group-prepend"">
                    <span class=""input-group-text"">Profit</span>
                </div>
                <input type=""number"" readonly id=""profit"" class=""form-control"">
            </div>

            <button type=""button"" onclick=""saveRecord()"" class=""btn btn-info"">Save</button>

        <");
                WriteLiteral(@"/div>
    </div>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script src=""https://code.jquery.com/jquery-1.12.4.js""></script>
    <script src=""https://code.jquery.com/ui/1.12.1/jquery-ui.js""></script>
    <script src=""https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"" integrity=""sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"" crossorigin=""anonymous""></script>
    <script type=""text/javascript"">
        $(function () {

        });

        function calculatePrice() {
            var aedrate = parseFloat($(""#aedrate"").val());
            var amount = parseFloat($(""#amount"").val());
            var weight = parseFloat($(""#weight"").val());
            var rateinpak = parseFloat($(""#rateinpak"").val());
            $(""#amount"").val(weight * rateinpak);
            $(""#aedcost"").val(amount / aedrate);


        }

        function calculateTransportCost() {

            var transport = pars");
                WriteLiteral(@"eFloat($(""#tansportinpak"").val());
            var rate = parseFloat($(""#transportrate"").val());
            $(""#transportcostinaed"").val(transport / rate);
        }

        function GetTotal() {
            var total = 0;
            var transportcharges = parseFloat($(""#transportcharges"").val());
            if (transportcharges > 0)
                total += transportcharges;
            var clearnesscharges = parseFloat($(""#clearnesscharges"").val());
            if (clearnesscharges > 0)
                total += clearnesscharges;
            var monciplecharges = parseFloat($(""#monciplecharges"").val());
            if (monciplecharges > 0)
                total += monciplecharges;
            var docharges = parseFloat($(""#docharges"").val());
            if (docharges > 0)
                total += docharges;
            var transportcostinaed = parseFloat($(""#transportcostinaed"").val());
            if (transportcostinaed > 0)
                total += transportcostinaed;
           ");
                WriteLiteral(@" var aedcost = parseFloat($(""#aedcost"").val());
            if (aedcost > 0)
                total += aedcost;
            $(""#totalcharges"").val(total);
        }

        function GetPUC() {

            var total = parseFloat($(""#totalcharges"").val());
            var bails = parseFloat($(""#bails"").val());
            $(""#puc"").val(total / bails);
            GetSale();
        }

        function GetSale() {
            var bails = parseFloat($(""#bails"").val());
            var rate = parseFloat($(""#rate"").val());
            $(""#sale"").val(bails * rate);

        }

        function GetProfilt() {
            var porfit = 0;
            var sale = parseFloat($(""#sale"").val());
            if (sale > 0)
                porfit = sale;
            var total = parseFloat($(""#totalcharges"").val());

            if (total > 0)
                porfit -= total;

            $(""#profit"").val(profit);
        }

        function saveRecord() {

            var model = {
       ");
                WriteLiteral(@"         VehicleNo: $(""#vehicleno"").val(),
                ContainerNo: $(""#containerno"").val(),
                Detail: $(""#detail"").val(),
                Weight: $(""#weigth"").val(),
                Bails: $(""#bails"").val(),
                Location: $(""#location"").val(),
                RateInPak: $(""#rateinpak"").val(),
                Amount: $(""#amount"").val(),
                RateInAED: $(""#aedrate"").val(),
                CostInAED: $(""#aedcost"").val(),
                TransportInPak: $(""#tansportinpak"").val(),
                TransportRate: $(""#transportrate"").val(),
                TransportCostInAED: $(""#transportcostinaed"").val(),
                DoCharges: $(""#docharges"").val(),
                MuncipleCharges: $(""#monciplecharges"").val(),
                ClearnessCharges: $(""#monciplecharges"").val(),
                TAX: $(""#monciplecharges"").val(),
                TransportCharges: $(""#totalcharges"").val(),
                PUC: $(""#puc"").val(),
                Total: $(""#Total");
                WriteLiteral(@""").val(),
                Rate: $(""#rate"").val(),
                Sale: $(""#sale"").val(),
                Profit: $(""#profit"").val(),


            };

            $.ajax({
                type: 'POST',
                cache: false,
                url: '../../Home/SaveRecord',
                dataType: 'json',
                data: model,
                error: function () {
                    alert(""Something went wrong"");
                },
                success: function (result) {
                    alert(""Saved!"");
                }
            });
        }
    </script>
");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<List<CurrencyConverter.Models.ModelDTO>> Html { get; private set; }
    }
}
#pragma warning restore 1591
